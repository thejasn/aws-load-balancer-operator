package awsloadbalancercontroller

import cco "github.com/openshift/cloud-credential-operator/pkg/apis/cloudcredential/v1"

type IAMPolicy struct {
	Version   string
	Statement []cco.StatementEntry
}

func GetIAMPolicy() IAMPolicy {
	return IAMPolicy{Version: "2012-10-17", Statement: []cco.StatementEntry{{Effect: "Allow", Action: []string{"iam:CreateServiceLinkedRole"}, Resource: "*", PolicyCondition: cco.IAMPolicyCondition{"StringEquals": cco.IAMPolicyConditionKeyValue{"iam:AWSServiceName": "elasticloadbalancing.amazonaws.com"}}}, {Effect: "Allow", Action: []string{"ec2:Describe*", "ec2:GetCoipPoolUsage", "ec2:*SecurityGroupIngress", "ec2:CreateSecurityGroup", "elasticloadbalancing:SetWebAcl", "elasticloadbalancing:*Listener*", "elasticloadbalancing:*Rule", "elasticloadbalancing:Describe*", "cognito-idp:DescribeUserPoolClient", "acm:*Certificate*", "iam:*Certificate*", "waf-regional:*", "wafv2:*WebACL*", "shield:*", "elasticloadbalancing:Set*", "elasticloadbalancing:*LoadBalancer*", "elasticloadbalancing:*TargetGroup*", "ec2:DeleteSecurityGroup"}, Resource: "*", PolicyCondition: nil}, {Effect: "Allow", Action: []string{"ec2:*Tags"}, Resource: "arn:aws:ec2:*:*:security-group/*", PolicyCondition: nil}, {Effect: "Allow", Action: []string{"elasticloadbalancing:CreateLoadBalancer", "elasticloadbalancing:CreateTargetGroup"}, Resource: "*", PolicyCondition: cco.IAMPolicyCondition{"Null": cco.IAMPolicyConditionKeyValue{"aws:RequestTag/elbv2.k8s.aws/cluster": "false"}}}, {Effect: "Allow", Action: []string{"elasticloadbalancing:*Tags"}, Resource: "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*", PolicyCondition: cco.IAMPolicyCondition{"Null": cco.IAMPolicyConditionKeyValue{"aws:RequestTag/elbv2.k8s.aws/cluster": "true", "aws:ResourceTag/elbv2.k8s.aws/cluster": "false"}}}, {Effect: "Allow", Action: []string{"elasticloadbalancing:*Tags"}, Resource: "arn:aws:elasticloadbalancing:*:*:loadbalancer/*/*/*", PolicyCondition: cco.IAMPolicyCondition{"Null": cco.IAMPolicyConditionKeyValue{"aws:RequestTag/elbv2.k8s.aws/cluster": "true", "aws:ResourceTag/elbv2.k8s.aws/cluster": "false"}}}, {Effect: "Allow", Action: []string{"elasticloadbalancing:*Tags"}, Resource: "arn:aws:elasticloadbalancing:*:*:listener*/*/*/*/*", PolicyCondition: nil}, {Effect: "Allow", Action: []string{"elasticloadbalancing:*Targets"}, Resource: "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*", PolicyCondition: nil}}}
}
